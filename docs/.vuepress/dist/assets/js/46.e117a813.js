(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{487:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"地理与气象数据分析-gma包-的说明与使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#地理与气象数据分析-gma包-的说明与使用"}},[t._v("#")]),t._v(" 地理与气象数据分析（gma包）的说明与使用")]),t._v(" "),s("h2",{attrs:{id:"写在前面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[t._v("#")]),t._v(" 写在前面")]),t._v(" "),s("p",[t._v("  对于大部分地学或气象学的学者来说，数据处理是一个很大的工程，动辄数小时或者数天的数据处理时间。如果没有很好的工具或者方法，在面对多时序（例如时序遥感数据），大尺度（例如全国范围）等数据分析研究时，就显得极为困难，因为数据处理本身就非常的耗时耗力。")]),t._v(" "),s("p",[t._v("  几年前读研究生时，我第一次初次接触遥感数据（以及气象数据），作为领域新人，面对庞大与复杂的数据，除了对数据、数据处理过程的一脸茫然，也对后续的研究不知所措。当然，在老师的带领下，逐渐入道IDL，并利用IDL完成了所有数据的处理，开展了相关的研究；也学会了ENVI、Arcgis之类的工具；顺利的毕了业。")]),t._v(" "),s("p",[t._v("  诚然，研究生阶段使我收获颇多。对数据以及数据处理也有了长远的进步，例如：可以使用批量处理VBA处理气象站点数据；利用IDL处理栅格数据（后续全部转为Python实现）；学会了SPPS、Origin等专业软件（虽然前期利用Python绘图，可能是因为懒，或者Origin过于方便，后期全部转为了Origin）;等等。也算为我现在的想法奠定了基础。")]),t._v(" "),s("p",[t._v("  不知何时起，萌生了一种将我所接触的遥感、气象数据处理方法与算法写成函数包汇总在一起的想法。后来工作过程中的实践也证明，这种方法对提高工作效率，对个人的成长进步非常有效。所以才有<地理与气象数据分析（geographic and meteorological data analysis）>gma这个Python函数包。")]),t._v(" "),s("p",[t._v("  目前，gma可实现 "),s("strong",[t._v("栅格数据处理（例如镶嵌、裁剪、重采样、重投影、格式转换、数据融合等），矢量数据处理（例如裁剪、擦除、交集、融合、重投影等），一些缺失值插补算法（例如线性插值）、平滑算法（例如SG平滑），一些指数算法（例如NDVI、ET0等等）")]),t._v(" 以及一些 "),s("strong",[t._v("系统交互操作")]),t._v(" ，并配有中文的函数帮助说明，这些功能算法已经封装，只需调用对应的函数，设置相应的参数即可实现。后续也会逐步补充更多的算法和功能。")]),t._v(" "),s("p",[t._v("  希望可以得到各位专家、同仁和朋友的支持与信赖，也希望得到各位的认可以及反馈。")]),t._v(" "),s("p",[t._v("@"),s("a",{attrs:{href:"%E7%9B%AE%E5%BD%95"}},[t._v("TOC")])]),t._v(" "),s("h2",{attrs:{id:"_0-gma安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-gma安装"}},[t._v("#")]),t._v(" 0 gma安装")]),t._v(" "),s("h3",{attrs:{id:"_0-1-python环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-python环境"}},[t._v("#")]),t._v(" 0.1 Python环境")]),t._v(" "),s("p",[t._v("  建议安装"),s("strong",[t._v("Anaconda")]),t._v("创建Python环境。Anaconda指的是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。\n  本文采用Anaconda的Windows版，版本为（点击下载）：")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://repo.anaconda.com/archive/Anaconda3-2021.05-Windows-x86_64.exe",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("Anaconda3 2021.05(Python 3.8.8 64-bit)")]),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("  gma需求的 "),s("strong",[t._v("Python版本应 >= 3.8")]),t._v(" 。")]),t._v(" "),s("h3",{attrs:{id:"_0-2-依赖库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-2-依赖库"}},[t._v("#")]),t._v(" 0.2 依赖库")]),t._v(" "),s("p",[t._v("  gma的构建依赖gdal，numpy，pandas和scipy等库，这些库是gma实现功能的基础。由于gdal不是一个纯Python库，需要下载whl包手动安装，获取地址：")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://www.lfd.uci.edu/~gohlke/pythonlibs/",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("https://www.lfd.uci.edu/~gohlke/pythonlibs/")]),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("从该网站下载对应版本GDAL的WHL包。Python 3.8 可下载 < "),s("strong",[t._v("GDAL-3.3.3-cp38-cp38-win_amd64.whl")]),t._v(" > 版本。")])]),t._v(" "),s("p",[t._v("  例如下载至D盘根目录，则文件路径为 "),s("strong",[t._v("D:\\GDAL-3.3.3-cp38-cp38-win_amd64.whl")]),t._v(" 。")]),t._v(" "),s("p",[t._v("  打开conda窗口（一般为 "),s("strong",[t._v("开始 - 所有程序 - Anaconda3 (64-bit) - Anaconda Powershell Prompt")]),t._v("），使用以下命令安装gdal（"),s("strong",[t._v("本文均使用默认环境")]),t._v("）:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pip install "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:\\GDAL-3.3.3-cp38-cp38-win_amd64.whl"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_0-3-安装gma"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-3-安装gma"}},[t._v("#")]),t._v(" 0.3 安装gma")]),t._v(" "),s("p",[s("strong",[t._v("gma已经上传至pypi")]),t._v("，可以直接在conda或Windows终端中输入以下命令安装：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pip install gma\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("  在安装gma时，依赖的numpy，pandas和scipy如果不存在则会自动安装（需联网）。\n  检查gma版本或是否安装成功：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" PS C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" conda list gma\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# packages in environment at C:\\Users\\xxxx\\anaconda3:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Name                    Version                   Build  Channel")]),t._v("\ngma                       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".0                    pypi_0    pypi\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("  出现gma的详细信息则说明gma已经成功安装。")]),t._v(" "),s("h2",{attrs:{id:"_1-gma组织方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-gma组织方式"}},[t._v("#")]),t._v(" 1 gma组织方式")]),t._v(" "),s("p",[t._v("  下表列出了gma库的组织结构。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("gma")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("algorithm")]),t._v("        ||栅格、矢量操作的"),s("strong",[t._v("基础算法")]),t._v(" "),s("ul",[s("li",[t._v("raster          ——栅格处理， rasp调用的"),s("strong",[t._v("算法")])]),t._v(" "),s("li",[t._v("vector          ——矢量处理，vesp调用的"),s("strong",[t._v("算法")])])])]),t._v(" "),s("li",[s("strong",[t._v("Relation")]),t._v("      || 关键 "),s("strong",[t._v("关联参数")]),t._v(" 设置\n"),s("ul",[s("li",[t._v("error          ——输入"),s("strong",[t._v("参数检查")]),t._v("，错误提示。")]),t._v(" "),s("li",[t._v("key          ——栅格/矢量 处理的高阶参数设置，例如"),s("strong",[t._v("压缩")]),t._v("，"),s("strong",[t._v("超大TIFF支持")]),t._v("等。")]),t._v(" "),s("li",[t._v("palmer          —— 帕尔默旱涝指数及其相关指数的原始算法（尚未整合，暂不可用）。")]),t._v(" "),s("li",[t._v("utils          ——palmer的依赖包。")])])]),t._v(" "),s("li",[s("strong",[t._v("index")]),t._v("      || 遥感、气象"),s("strong",[t._v("指数")]),t._v("算法。")]),t._v(" "),s("li",[s("strong",[t._v("math")]),t._v("      || 一些"),s("strong",[t._v("数学")]),t._v("方法。")]),t._v(" "),s("li",[s("strong",[t._v("osf")]),t._v("      || "),s("strong",[t._v("系统交互")]),t._v("操作。")]),t._v(" "),s("li",[s("strong",[t._v("rasp")]),t._v("      || "),s("strong",[t._v("栅格处理")]),t._v("函数包。")]),t._v(" "),s("li",[s("strong",[t._v("vesp")]),t._v("      || "),s("strong",[t._v("矢量处理")]),t._v("函数包。")])])]),t._v(" "),s("h2",{attrs:{id:"_2-gma函数简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-gma函数简介"}},[t._v("#")]),t._v(" 2 gma函数简介")]),t._v(" "),s("h3",{attrs:{id:"_2-1-index指数运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-index指数运算"}},[t._v("#")]),t._v(" 2.1 index指数运算")]),t._v(" "),s("center",[t._v("表 2.1 index指数运算（基于数组）主要函数简介")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/image/index.png",alt:""}})]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\n​"),s("br"),t._v("\n​")]),t._v(" "),s("h3",{attrs:{id:"_2-2-math数学运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-math数学运算"}},[t._v("#")]),t._v(" 2.2 math数学运算")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/image/MATH.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-3-osf系统交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-osf系统交互"}},[t._v("#")]),t._v(" 2.3 osf系统交互")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/image/20211116214400.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-4-rasp栅格处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-rasp栅格处理"}},[t._v("#")]),t._v(" 2.4 rasp栅格处理")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/image/RASP.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-5-vesp矢量处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-vesp矢量处理"}},[t._v("#")]),t._v(" 2.5 vesp矢量处理")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/image/vesp.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_3-key默认参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-key默认参数"}},[t._v("#")]),t._v(" 3 key默认参数")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("默认参数已经内置。下表仅列出gma定义了的参数，后期可能会对其进行修改。")])])]),t._v(" "),s("center",[t._v("表 3 key默认参数设置简介")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("变量")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("详细介绍")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RasterFormat")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字典")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("支持的栅格数据驱动")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("'AAIGrid', 'BT', 'CALS', 'COG', 'DTED', 'EHdr', 'ENVI', 'ERS', 'EXR', 'FIT', 'GIF', 'GPKG', 'GRIB', 'GS7BG', 'GSAG', 'GSBG', 'GTiff', 'HDF4Image','HF2', 'HFA', 'ISCE', 'ISIS2', 'ISIS3', 'JP2OpenJPEG', 'JPEG', 'LAN', 'MBTiles', 'XPM', 'XYZ', 'netCDF', 'MFF2', 'MRF', 'NITF', 'PAux', 'PCIDSK', 'PCRaster', 'PNG', 'RST', 'Rasterlite', 'SIGDEM', 'USGSDEM', 'VICAR', 'VRT'")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("VectorFormat")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字典")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("支持的矢量数据驱动")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("'ESRI Shapefile', 'PCIDSK', 'PDS4', 'PDF', 'MBTiles',  'MapInfo File', 'Memory', 'CSV', 'GML', 'LIBKML', 'KML', 'GeoJSON', 'OGR_GMT', 'GPKG', 'SQLite', 'WAsP',  'FlatGeobuf', 'Geoconcept', 'GeoRSS', 'ODS', 'XLSX', 'JML', 'VDV', 'MVT', 'MapML'")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字典")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("'未知类型': 0, '8位无符号整型': 1, '16位无符号整型': 2, '16位整型': 3, '32位无符号整型': 4,'32位整型': 5, '32位浮点': 6, '64位浮点': 7, '16位复整型': 8, '32位复整型': 9,'32位复浮点型': 10, '64位复浮点型': 11")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ResampleMethod")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字典")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("重采样方法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("0: 'Nearest Neighbour', 1: 'Bilinear', 2: 'Cubic', 3: 'CubicSpline',4: 'Lanczos', 5: 'Average', 6: 'RMS', 7: 'Mode'")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("FeatureType")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字典")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("矢量要素类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("'未知':0,'点':1, '线':2, '面':3, '多点':4, '多线':5, '多面':6")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GetGTiffOptions")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GTiff的创建参数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1. 不生成 ESRI 世界文件（.tfw ）。"),s("br"),t._v(" 2. 不生成（.RPB）文件来描述 RPC（有理多项式系数）。"),s("br"),t._v(" 3.  不设置数据位深（NBITS）。"),s("br"),t._v(" 4. 默认 'LZW' 压缩。"),s("br"),t._v(" 5.  默认通过估算生成文件大小来确定是否生成 BIGTIFF 文件。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GenRCOptions")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据栅格驱动生成创建选项")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GetRasterEXTFromDriver")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据栅格驱动格式返回扩展名")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GetSHPOptions")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ESRI Shapefile 的创建参数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1. 默认创建矢量文件的字段编码为'UTF-8'。"),s("br"),t._v(" 2. 自动调整字段大小。 "),s("br"),t._v(" 3. 不强制解除 '.SHP'、'.DBF' 文件2GB大小的限制。 "),s("br"),t._v(" 4. 不生成空间索引文件（.qix）。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GenVCOptions")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据矢量驱动生成创建选项")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GetVectorEXTFromDriver")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("函数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据矢量驱动格式返回扩展名")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),s("h2",{attrs:{id:"_4-gma函数帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-gma函数帮助"}},[t._v("#")]),t._v(" 4 gma函数帮助")]),t._v(" "),s("p",[t._v("  为了使gma使用更加简单直观，gma中所有的函数帮助均提供中文帮助。例如：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" gma\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gma"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rasp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Clip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("  中文帮助如下：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("Help on function Clip "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" module gma"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rasp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\nClip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("InFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CutLineFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InNoData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutNoData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MaskBoundary"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutFormat"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GTiff'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    简介\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n    按矢量裁剪栅格。\n    \n    参数\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n    InFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v("。输入栅格路径。\n    \n    OutFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v("。输出栅格路径。\n    \n    CutLineFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v("。裁剪矢量文件路径。\n    \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("可选参数\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n    InNoData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number。输入栅格的无效值。默认不指定（"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("）无效值。\n    \n    OutNoData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number。输出栅格的无效值。默认不指定（"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("）无效值。\n    \n    MaskBoundary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("。是否掩膜边界外数据。默认掩膜（"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("）。\n    \n    OutFormat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v("。输出文件格式，默认为 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GTiff'")]),t._v("。其他格式详见 ToOtherFormat 函数。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("p",[t._v("  其他内容后续会逐一介绍和说明。感谢大家理解。详细的函数帮助可见："),s("a",{attrs:{href:"https://blog.csdn.net/weixin_42155937/article/details/121257796",target:"_blank",rel:"noopener noreferrer"}},[t._v("自建 | gma函数详细帮助"),s("OutboundLink")],1),t._v(" 或利用help调出相关帮助，本文不在详细解释。")]),t._v(" "),s("h2",{attrs:{id:"写在最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写在最后"}},[t._v("#")]),t._v(" 写在最后")]),t._v(" "),s("p",[t._v("  由于时间和精力的限制，目前可用的函数还不完善。部分函数为了gma的构建进行了修改，还未完成完整的测试。如果存在问题，我会及时进行修复。"),s("br"),t._v("\n  库的构建是一个漫长和持续的过程，后续gma会添加更多的函数方法，以期使地理处理过程更加的简单方便。"),s("br"),t._v("\n  近期的gma完善计划如下："),s("br"),t._v(" "),s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/image/886b2f31ee98a5a617ba70085267b2d.jpg",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"作者简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作者简介"}},[t._v("#")]),t._v(" 作者简介")]),t._v(" "),s("p",[t._v("​\t"),s("img",{attrs:{src:"https://gitee.com/kitmyfaceplease/image_upload/raw/master/img/202111151837694.png",alt:""}})]),t._v(" "),s("p",[t._v("​\t洛，毕业于中国农业科学院，是一名不见经传的小小算法工程师，家乡河南洛阳，当前在北京从事一份还凑活的工作。目前致力于完成一套中文版开源的遥感、气象及相关算法体系（简单来说就是汇集其他优秀的Python库，将常用的功能封装好），使各类常用流程简单化。")]),t._v(" "),s("p",[t._v("​\t\t期待与各位同学、同事与朋友的共同进步。有需求或者疑问可联系微信：Luo_Suppe。")])],1)}),[],!1,null,null,null);a.default=n.exports}}]);